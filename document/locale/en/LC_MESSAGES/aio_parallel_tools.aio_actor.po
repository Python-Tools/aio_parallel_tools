# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, huangsizhe
# This file is distributed under the same license as the aio_parallel_tools
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aio_parallel_tools 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-11 14:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../document/aio_parallel_tools.aio_actor.rst:2
msgid "aio\\_parallel\\_tools.aio\\_actor package"
msgstr ""

#: ../../document/aio_parallel_tools.aio_actor.rst:6
msgid "Actor API"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc:1
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC:1 of
msgid "Asynchronous Actor Abstract Base Class."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC:1 of
msgid "基类：:class:`object`"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.AvailableScope:1 of
msgid "Get the available actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.AvailableScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.BestToSendScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotAvailableScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotPausedScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotRunningScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.PausedScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.RunningScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.aid
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.available
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_maxsize
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_size
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.loop
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.paused
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.running
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.task
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.available
#: aio_parallel_tools.aio_actor.actor_manager.get_actor
#: aio_parallel_tools.aio_actor.actor_manager.has_actor of
msgid "返回"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.AvailableScope:3 of
msgid "List of the available actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.AvailableScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.BestToSendScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotAvailableScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotPausedScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotRunningScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.PausedScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.RunningScope
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.aid
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.available
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_maxsize
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_size
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.loop
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.paused
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.running
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.task
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.available
#: aio_parallel_tools.aio_actor.actor_manager.get_actor
#: aio_parallel_tools.aio_actor.actor_manager.has_actor of
msgid "返回类型"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.BestToSendScope:1 of
msgid "Get a number of the best to send actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.BestToSendScope:3 of
msgid "A number of the best to send actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Clean:1 of
msgid "Clean all not available actors."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Close:1
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Close:3 of
msgid "Close a number of available actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Close
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Publish
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Restart
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Send
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendById
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendRandom
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.close
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.receive
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send_nowait
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.close
#: aio_parallel_tools.aio_actor.actor_manager.get_actor of
msgid "参数"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById:1 of
msgid "Find a actor instance by id."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendById:3 of
msgid "actor id in str"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.FindById:6 of
msgid "a actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotAvailableScope:1 of
msgid "Get the not available actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotAvailableScope:3 of
msgid "List of the not available actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotPausedScope:1 of
msgid "Get the not paused actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotPausedScope:3 of
msgid "List of the not paused actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotRunningScope:1 of
msgid "Get the not running actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.NotRunningScope:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.RunningScope:3 of
msgid "List of the running actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.PausedScope:1 of
msgid "Get the paused actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.PausedScope:3 of
msgid "List of the paused actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Publish:1 of
msgid "Send message to all available actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Publish:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Send:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendById:5
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendRandom:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.receive:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send:3
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send_nowait:3 of
msgid "Message to send to the actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Publish:5
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Send:5
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendById:7
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendRandom:5
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send:5 of
msgid "Timeout of the sending action."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Restart:1 of
msgid "Restart a number of not available actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Restart:3 of
msgid "The number of actor to restart."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.RunningScope:1 of
msgid "Get the running actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Send:1 of
msgid "Send message to the most available actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendById:1 of
msgid "Find a actor instance by id to send message."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.SendRandom:1 of
msgid "Send message to a random available actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start:1 of
msgid "Create and start a number of actor."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start:3 of
msgid "The number of actor to create and start."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start:5 of
msgid "inbox's Size. Defaults to 0."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start:7 of
msgid "Event loop which the actors running on. Defaults to None."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.Start:9 of
msgid "timeout for waiting for the recive function. Defaults to None."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.aid:1 of
msgid "Get the id of the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.aid:3 of
msgid "The id of the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.available:1
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.available:1 of
msgid "Check if the actor instance is available."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.available:3
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.available:3 of
msgid "if the actor instance is available."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.close:1
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.close:1 of
msgid "Close the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.close:3
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.close:3 of
msgid "timeout of closing action. Defaults to None."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_maxsize:1 of
msgid "Max size of the actor instance's message box."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_maxsize:3 of
msgid "The max size of the actor instance's message box."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_size:1
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.inbox_size:3 of
msgid "Size of the actor instance's message box."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.loop:1
#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.loop:3 of
msgid "The event loop tasks running on."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.paused:1 of
msgid "Check if the actor instance is paused."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.paused:3 of
msgid "if the actor instance is paused."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.receive:1 of
msgid "Define in your subclass."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.running:1 of
msgid "Check if the actor instance is running."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.running:3 of
msgid "If the actor instance is running.."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send:1 of
msgid "Send a message to the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.send_nowait:1 of
msgid "Send a message to the actor instance with no wait."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.start:1
#: aio_parallel_tools.aio_actor.actor_basic.AioActor.start:1 of
msgid "Start the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.task:1 of
msgid "Task running inside the actor instance."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_abc.ActorABC.task:3 of
msgid "The task running inside the actor instance."
msgstr ""

#: ../../document/aio_parallel_tools.aio_actor.rst:14
msgid "Base Class"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_basic:1 of
msgid "Async Actor Tool."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_basic.AioActor:1 of
msgid ""
"基类：:class:`aio_parallel_tools.aio_actor.mixins.manage_mixin.ManageMixin`,"
" :class:`aio_parallel_tools.aio_actor.mixins.inbox_mixin.InboxMixin`, "
":class:`aio_parallel_tools.aio_actor.mixins.task_mixin.TaskMixin`, "
":class:`aio_parallel_tools.aio_actor.mixins.hooks_mixin.HooksMixin`, "
":class:`aio_parallel_tools.aio_actor.mixins.id_mixin.IdentifyMixin`, "
":class:`aio_parallel_tools.aio_actor.mixins.loop_mixin.LoopMixin`, "
":class:`aio_parallel_tools.aio_actor.actor_abc.ActorABC`"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_basic.AioActor:1 of
msgid "Base Async Actor class."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_basic.AioActor:3 of
msgid ""
"To use the base class,we should create a sub class and write a implement "
"of async method `receive`."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_basic.AioActor:5 of
msgid "Usage:"
msgstr ""

#: ../../document/aio_parallel_tools.aio_actor.rst:22
msgid "Actor Manager"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager:1 of
msgid "Functions for managing Actors."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.ActorManagerRegister:1 of
msgid "基类：:class:`type`"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.ActorManagerRegister:1 of
msgid "Meta class for regist subclass for management."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.get_actor:1 of
msgid "Get actor class by name."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.get_actor:3 of
msgid "actor class's name"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.get_actor:6 of
msgid "actor class"
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.has_actor:1 of
msgid "Get all actor name."
msgstr ""

#: aio_parallel_tools.aio_actor.actor_manager.has_actor:3 of
msgid "all actor name."
msgstr ""

#~ msgid "Bases: :class:`abc.ABC`"
#~ msgstr ""

#~ msgid "Bases: :class:`object`"
#~ msgstr ""

#~ msgid "Bases: :class:`Exception`"
#~ msgstr ""

#~ msgid "Bases: :class:`Warning`"
#~ msgstr ""

#~ msgid "Bases: :class:`type`"
#~ msgstr ""

#~ msgid "基类：:class:`abc.ABC`"
#~ msgstr ""

#~ msgid "Define in your subclass."
#~ msgstr ""

#~ msgid "Send a message to the actor."
#~ msgstr ""

#~ msgid "Send a message to the actor"
#~ msgstr ""

#~ msgid "基类：:class:`object`"
#~ msgstr ""

#~ msgid "actor关闭后执行的钩子."
#~ msgstr ""

#~ msgid "actor启动后执行的钩子."
#~ msgstr ""

#~ msgid "每次处理收到的消息后执行的钩子."
#~ msgstr ""

#~ msgid "每个循环执行后执行的钩子."
#~ msgstr ""

#~ msgid "actor关闭前执行的钩子."
#~ msgstr ""

#~ msgid "actor启动前执行的钩子."
#~ msgstr ""

#~ msgid "每次处理收到的消息前执行的钩子."
#~ msgstr ""

#~ msgid "每个循环执行前执行的钩子."
#~ msgstr ""

#~ msgid "基类：:class:`type`"
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.actor\\_basic\\_copy module"
#~ msgstr ""

#~ msgid "Subpackages"
#~ msgstr ""

#~ msgid "Submodules"
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.exception\\_and\\_warning module"
#~ msgstr ""

#~ msgid "Exceptions and warnings."
#~ msgstr ""

#~ msgid "基类：:class:`Exception`"
#~ msgstr ""

#~ msgid "Actor is Paused."
#~ msgstr ""

#~ msgid "基类：:class:`Warning`"
#~ msgstr ""

#~ msgid "Actor Timeout Warning."
#~ msgstr ""

#~ msgid "Inbox Nearlly Full Warning."
#~ msgstr ""

#~ msgid "No Available Actor."
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.signal module"
#~ msgstr ""

#~ msgid "Sigals to send to actors."
#~ msgstr ""

#~ msgid "Tell Actor it's time to close."
#~ msgstr ""

#~ msgid "Module contents"
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.actor\\_abc module"
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.actor\\_basic module"
#~ msgstr ""

#~ msgid "aio\\_parallel\\_tools.aio\\_actor.actor\\_manager module"
#~ msgstr ""

